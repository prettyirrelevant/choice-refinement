{"version":3,"sources":["constants.js","utils/walletUtils.ts","utils/animation.ts","faq/QuestionItem.tsx","faq/index.tsx","components/Footer.js","sections/Roadmap.js","sections/Landing.js","sections/Founders.js","Home.tsx","sections/StartElection.js","elections/index.js","participate/ElectionCard.styles.ts","participate/ElectionCard.tsx","components/Loader.tsx","participate/index.tsx","transfer/index.js","elections/create.js","components/Toggle.js","components/ConnectWalletButton.tsx","utils/stringUtils.ts","components/AccountInfo.tsx","components/TotalCommittedChoice.tsx","statics/TopNavigationBar.tsx","statics/BottomNavigationBar.js","MainPage.tsx"],"names":["URL","ASSET_ID","sign","txns","walletType","connector","a","txnsToSign","map","txn","Buffer","from","algosdk","encodeUnsignedTransaction","toString","request","formatJsonRpcRequest","result","sendCustomRequest","element","idx","console","log","txID","blob","Uint8Array","signTransaction","signTxn","sendWait","signed","chain","client","clientForChain","sendRawTransaction","t","do","txId","waitForConfirmation","timeout","Error","status","startround","currentround","pendingTransactionInformation","undefined","pending","length","statusAfterBlock","collapseOrExpandElement","condition","style","maxHeight","scrollHeight","QuestionItem","item","useState","isQuestionCollapsed","setIsQuestionCollapsed","questionAnswerRef","useRef","collapseOrExpandQuestion","useCallback","current","useEffect","className","onClick","que","ref","ans","Faq","ScrollText","loadable","Footer","word","target","rel","href","ArrowDown","Roadmap","br_point","useWindowSize","width","opacity","viewBox","id","d","xlinkHref","aria-label","textLength","ScrollTextLand","SvgBack","xmlns","transform","Landing","Founders","src","alt","Home","StartElection","walletAddress","localStorage","getItem","headers","myData","setMyData","useQuery","axios","get","then","response","data","isLoading","error","isWalletConnected","dispatch","useDispatch","message","index","type","payload","process_image","title","description","flex","display","fontSize","color","letterSpacing","alignItems","padding","textAlign","justifyContent","textTransform","lineHeight","margin","flexDirection","height","cursor","to","Elections","VoteListWrapper","styled","div","isVoteListCollapsed","VoteNowList","ul","CollapsedChart","isChartCollapsed","CandidatePercentage","LabelRow","label","ChoiceCoinAmountRow","Chart","ElectionCard","scores","options","election","setIsVoteListCollapsed","setIsChartCollapsed","voteOptionChosen","setVoteOptionChosen","voteChoiceAmount","setVoteChoiceAmount","assets","useSelector","selectAssets","address","selectAddress","selectChain","selectWalletType","selectConnector","voteListWrapperRef","collapsedChartRef","totalScore","_","sum","submitVoteHandler","alert","wallet","containsChoice","some","choiceCoin","find","asset","Number","amount","apiGetTxnParams","suggestedParams","_amount","makeAssetTransferTxnWithSuggestedParamsFromObject","assetIndex","signedTxn","getAccountAssets","onVoteOptionChosen","event","value","collapseOrExpandVoteList","collapseOrExpandChart","card_desc","choice_per_vote","candidates","image","name","card_cand","Math","floor","cand_score","cand_det","slug","onChange","htmlFor","spin","keyframes","LoadingIcon","Loader","Wrapper","Participate","votes","Index","setAmount","addr","setAddr","balance","setBalance","algodClient","Algodv2","myAlgoWallet","MyAlgoConnect","makeTransfer","accountInformation","getTransactionParams","amountToSend","abs","toByte","window","AlgoSigner","encoding","msgpackToBase64","base64ToMsgpack","location","reload","myAccountInfo","b","setMyBalance","e","borderRadius","border","placeholder","CreateElection","items","setitems","itemInp","setItemInp","processTit","setProcessTit","electionDescription","setElectionDesciption","choiceToSend","setChoiceToSend","hdImgPicker","itemImgPicker","hdImg","setHdImg","itemImg","setItemImg","createCandidates","candidatesCred","candidate","generateAccount","private_key","sk","push","secretKeyToMnemonic","topUpCandidates","AMOUNT","makePaymentTxnWithSuggestedParamsFromObject","groupID","computeGroupID","i","group","continueExecution","signedTxns","optinCandidates","transactionOptions","closeRemainderTo","revocationTarget","mnemonicToSecretKey","createElection","trim","updatedCandidates","electionData","post","hidden","reader","FileReader","files","readAsDataURL","onload","readerEvent","accept","click","min","includes","prev","filter","it","removeItem","ToggleWrapper","iconWrapperSharedStyles","css","IconWrapperLeft","IconWrapperRight","Toggle","darkTheme","checked","setChecked","overflow","nextChecked","setItem","handleDiameter","offColor","onColor","offHandleColor","onHandleColor","boxShadow","activeBoxShadow","checkedIcon","uncheckedIcon","ConnectButton","button","ConnectWalletButton","ellipseAddress","slice","formatBigNumWithDecimals","num","decimals","singleUnit","BigInt","repeat","fractionalUnits","padStart","AccountInfoWrapper","AssetInfo","ConnectedAddressWrapper","Address","AccountInfo","nativeCurrency","creator","frozen","unitName","getAlgoAssetData","choiceCoinAsaId","getChoiceCoinData","killSession","TotalCommittedChoiceWrapper","TotalCommittedChoice","userTotalCommittedChoiceToVoting","setUserTotalCommittedChoiceToVoting","algoIndexer","indexerForChain","voteAddressList","flat","lookupAccountTransactions","_totalCommittedChoice","transactions","receiver","userSentChoiceTx","reduce","previousValue","currentTx","RightMenuWrapper","TopNavigationBar","connected","selectConnected","marginLeft","paddingBottom","marginRight","BottomNavigationBar","NavLink","isActive","fontWeight","background","MainPage","state","setWalletType","WalletConnect","bridge","qrcodeModal","QRCodeModal","MyAlgo","setConnector","path"],"mappings":"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","file":"static/js/7.a704c409.chunk.js","sourcesContent":["const URL = \"https://choice-coin-api.herokuapp.com\";\n// const URL = \"http://localhost:5000\";\nconst ASSET_ID = 21364625;\n\nexport { URL, ASSET_ID };\n","import algosdk, { Transaction } from \"algosdk\";\nimport { formatJsonRpcRequest } from \"@json-rpc-tools/utils\";\nimport { ChainType, clientForChain } from \"./api\";\n\nexport interface SignedTxn {\n  txID: string\n  blob: Uint8Array\n}\n\nexport async function sign(txns: Transaction[], walletType: string, connector: any): Promise<SignedTxn[]> {\n\n  const txnsToSign = txns.map((txn) => {\n    const encodedTxn = Buffer.from(algosdk.encodeUnsignedTransaction(txn)).toString(\"base64\");\n\n    return {txn: encodedTxn};\n  })\n\n  const request = formatJsonRpcRequest(\"algo_signTxn\", [txnsToSign]);\n  \n  let result: string[] = [];\n  if (walletType === \"walletConnect\") {\n    result = await connector.sendCustomRequest(request);\n    return result.map((element, idx) => {\n      console.log(\"Element: \", element)\n      return element ? {\n          txID: txns[idx].txID(), \n          blob: new Uint8Array(Buffer.from(element, \"base64\"))\n        } : {\n          txID:txns[idx].txID(), \n          blob:new Uint8Array()\n        };\n    });\n  } else if (walletType === \"myAlgo\") {\n    result = await connector.signTransaction(txnsToSign.map(txn => txn.txn));\n  } else if (walletType === \"algoSigner\") {\n    result = await connector.signTxn([txnsToSign]);\n  }\n  console.log(\"RESULT: \",result);\n\n  return result.map((element, idx) => {\n    console.log(\"Element: \", element)\n    return element ? {\n        txID: txns[idx].txID(), \n        blob: new Uint8Array(Buffer.from((element as any).blob, \"base64\"))\n      } : {\n        txID:txns[idx].txID(), \n        blob:new Uint8Array()\n      };\n  });\n}\n\n// Utility function to block after sending the raw transaction for 3 rounds in this case\nexport async function sendWait(signed: SignedTxn[], chain: ChainType): Promise<any> {\n  const client = clientForChain(chain)\n  const {txId} = await client.sendRawTransaction(signed.map((t)=>{return t.blob})).do()\n  const result = await waitForConfirmation(txId, 3, chain)\n  return result \n}\n\n// Continuously poll the pending txn endpoint with the txn id to see if its been confirmed\n// At the time of reading, this may have been included in the js-sdk and that one should\n// be used instead of this one\nasync function waitForConfirmation(txId: string, timeout: number, chain: ChainType): Promise<any> {\n  const client = clientForChain(chain)\n\n  if (client == null || txId == null || timeout < 0) {\n    throw new Error('Bad arguments.');\n  }\n\n  const status = await client.status().do();\n  if (typeof status === 'undefined')\n    throw new Error('Unable to get node status');\n\n  const startround = status['last-round'] + 1;\n  let currentround = startround;\n\n  /* eslint-disable no-await-in-loop */\n  while (currentround < startround + timeout) {\n    const pending = await client\n      .pendingTransactionInformation(txId)\n      .do();\n\n    if (pending !== undefined) {\n      if ( pending['confirmed-round'] !== null && pending['confirmed-round'] > 0) \n        return pending;\n\n      if ( pending['pool-error'] != null && pending['pool-error'].length > 0) \n        throw new Error( `Transaction Rejected pool error${pending['pool-error']}`);\n    }\n\n    await client.statusAfterBlock(currentround).do();\n    currentround += 1;\n  }\n\n  /* eslint-enable no-await-in-loop */\n  throw new Error(`Transaction not confirmed after ${timeout} rounds!`);\n}\n","export const collapseOrExpandElement = (element: HTMLElement, condition: boolean) => {\n  if (condition) {\n    element.style.maxHeight = \"0\";\n  } else {\n    element.style.maxHeight = element?.scrollHeight + \"px\";\n  }\n};","import { useCallback, useEffect, useRef, useState } from \"react\";\nimport { collapseOrExpandElement } from \"../utils/animation\";\n\n// TODO: need to pull out the types\nconst QuestionItem: React.FC<{\n  item: {\n    que: string;\n    ans: string;\n  };\n}> = ({ item }) => {\n  const [isQuestionCollapsed, setIsQuestionCollapsed] = useState(true);\n  const questionAnswerRef = useRef(null);\n  const collapseOrExpandQuestion = useCallback(() => {\n    if (questionAnswerRef && questionAnswerRef.current) {\n      collapseOrExpandElement(questionAnswerRef.current, isQuestionCollapsed);\n    }\n  }, [isQuestionCollapsed, questionAnswerRef]);\n\n  const questionClickHandler = () => {\n    setIsQuestionCollapsed(!isQuestionCollapsed);\n  };\n\n  useEffect(() => collapseOrExpandQuestion(), [collapseOrExpandQuestion]);\n\n  return (\n    <div className=\"collap_cov\">\n      <button\n        className={`collapsible${isQuestionCollapsed ? \"\" : \" colap_active\"}`}\n        onClick={questionClickHandler}\n      >\n        <p>{item.que}</p>\n      </button>\n      <div className=\"collap_cont\" ref={questionAnswerRef}>\n        <p>{item.ans}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default QuestionItem;\n","import \"./faq.css\";\nimport QuestionItem from \"./QuestionItem\";\n\nconst Faq = () => {\n  const faqList = [\n    {\n      que: \"What was $CHOICE built for?\",\n      ans: \"Choice Coin is a governance token and open source software for decentralized voting. The Choice Coin Network is prioritizing democracy, and will incentivize its participants to help it fundamentally change how decisions are made on a large scale. Choice Coin solves the decentralized voting problem by introducing a digital asset for voting on a distributed ledger.\",\n    },\n    {\n      que: \"How can I get $CHOICE?\",\n      ans: \"Choice Coin is now available on TinyMan! TinyMan is a Decentralized Exchange and Automated Market Maker operating on the Algorand Blockchain. It allows individuals to swap various ASAs for one another.  Get Choice Coin on https://tinyman.org/ today! \",\n    },\n    {\n      que: \" What's Choice Coin Liquidity Program?\",\n      ans: \"As a way to incentivize additional participation within the ecosystem, the Choice Coin Network is glad to announce its a Liquidity Rewards Program. This program will help grow Choice Coin on the TinyMan DEX. Specifc insturctions follow. Add liquidity for Choice Coin with either ALGO or any of the top 10 ASAs on https://app.tinyman.org/#/pool. \",\n    },\n    {\n      que: \" About Algorand\",\n      ans: \"Algorand is a blockchain-based cryptocurrency platform that aims to be secure, scalable, and decentralized. The Algorand platform supports smart contract functionality, and its consensus algorithm is based on proof-of-stake principles and a Byzantine Agreement protocol. Algorand's native cryptocurrency is called Algo.\",\n    },\n  ];\n\n  return (\n    <div className=\"faq_cont\">\n      <div className=\"faq_cont_inn\">\n        <div className=\"faq_hd\">\n          <p>\n            <i className=\"uil uil-question-circle\"></i> Frequently Asked\n            Questions\n          </p>\n        </div>\n\n        {faqList.map((item) => (\n          <QuestionItem item={item} key={item.que} />\n        ))}\n\n        <div className=\"ask_q_sect\">\n          <button className=\"ask_que\">\n            <p>\n              Ask a question or contribute{\" \"}\n              <i className=\"uil uil-arrow-up-right\"></i>\n            </p>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Faq;\n","import \"../styles/footer.css\";\nimport loadable from \"@loadable/component\";\nconst ScrollText = loadable(() => import(\"./ScrollText\"));\n\nconst Footer = () => {\n  <ScrollText />;\n\n  return (\n    <footer className=\"hm_ft\">\n      <ScrollText word={\"Join our Community\"} />\n      <div className=\"ft_cont\">\n        <div className=\"ft_hdr\">\n          <div className=\"ft_hfr_1\">\n            <p>\n              Join our rapidly <br /> growing community\n              {/* Become one <br /> of the lazy ones! */}\n            </p>\n            <p>\n              The Choice Coin community is rapidly expanding thanks to our\n              engagement and incentive programs. As this open-source project\n              continues to grow, we look forward to building the new age of\n              decentralized governance.\n              <br />\n              <br />\n              Learn more about Choice Coin by checking out our Github Repos,\n              social media handles, official blog, and documentation below.\n            </p>\n          </div>\n        </div>\n\n        <div className=\"ft_inn\">\n          <div className=\"ft_r1\">\n            <p className=\"get_inv\">Get Involved</p>\n            <ul>\n              <li>\n                <a\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  href=\"https://mobile.twitter.com/ChoiceCoinNews\"\n                >\n                  <i className=\"uil uil-twitter\"></i> <p>Twitter</p>\n                </a>\n              </li>\n              <li>\n                <a\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  href=\"https://t.me/choicecoin\"\n                >\n                  <i className=\"uil uil-telegram\"></i> <p>Telegram</p>\n                </a>\n              </li>\n              <li>\n                <a\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  href=\"https://medium.com/@ChoiceCoin\"\n                >\n                  <i className=\"uil uil-medium-m\"></i> <p>Medium</p>\n                </a>\n              </li>\n              <li>\n                <a\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  href=\"https://discord.gg/9WpzukzH\"\n                >\n                  <i className=\"uil uil-discord\"></i> <p>Discord</p>\n                </a>\n              </li>\n            </ul>\n\n            <ul>\n              <li>\n                <a\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  href=\"https://github.com/ChoiceCoin/White_Paper\"\n                >\n                  White Paper\n                </a>\n              </li>\n              <li>\n                <a\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  href=\"https://choice-coin.gitbook.io/choice-coin-docs/getting-started/introduction\"\n                >\n                  Docs\n                </a>\n              </li>\n              <li>\n                <a\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  href=\"https://medium.com/@ChoiceCoin\"\n                >\n                  Blog\n                </a>\n              </li>\n            </ul>\n          </div>\n\n          <div className=\"ft_r2\"></div>\n\n          <div className=\"ft_r3\">\n            <p>2021, All Rights Reserved</p>\n            <ul>\n              <li>\n                <a\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  href=\"https://medium.com/@ChoiceCoin\"\n                >\n                  Privacy\n                </a>\n              </li>\n              <li>\n                <a\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  href=\"https://medium.com/@ChoiceCoin\"\n                >\n                  Terms\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import \"../styles/roadmap.css\";\nimport loadable from \"@loadable/component\";\nimport { useWindowSize } from \"@react-hook/window-size\";\nconst ArrowDown = loadable(() => import(\"../components/ArrowDown\"));\nconst ScrollText = loadable(() => import(\"../components/ScrollText\"));\n\nconst Roadmap = () => {\n  const br_point = 800;\n  const [width] = useWindowSize();\n\n  return (\n    <div className=\"roadmap\">\n      <div className=\"roadmap_inn\">\n        <ScrollText word={\"Roadmap\"} />\n\n        <div className=\"rm1\">\n          <div className=\"rotating_txt_cont\">\n            <button className=\"rotating_txt button--surtur\">\n              <ArrowDown opacity={0.2} />\n              <svg className=\"textcircle\" viewBox=\"0 0 500 500\">\n                <defs>\n                  <path\n                    id=\"textcircle\"\n                    d=\"M250,400 a150,150 0 0,1 0,-300a150,150 0 0,1 0,300Z\"\n                  />\n                </defs>\n                <text>\n                  <textPath\n                    xlinkHref=\"#textcircle\"\n                    aria-label=\"Updated Roadmap\"\n                    textLength=\"900\"\n                  >\n                    Choice Roadmap - Choice Roadmap -\n                  </textPath>\n                </text>\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        <div className=\"rm2\">\n          <div className=\"rm_sec\">\n            <div className=\"rm_date\">\n              {width > br_point ? (\n                <>\n                  <span>\n                    <i className=\"uil uil-asterisk\"></i>\n                  </span>\n                  Q2 2022 -&nbsp;\n                </>\n              ) : (\n                <>\n                  <span>\n                    <i className=\"uil uil-asterisk\"></i>\n                  </span>\n                  Q2 2022 -&nbsp;Choice Charities\n                </>\n              )}\n            </div>\n            <div className=\"rm_desc\">\n              {width > br_point && (\n                <p className=\"rm_desc_hd\">Choice Charities</p>\n              )}\n              <p className=\"rm_desc_txt\">\n                The Choice Coin Network plans to launch Choice Charities, a\n                charity hosted by Fortior Blockchain, for its native token. The\n                goal of Choice Charities will be to identify charities and\n                non-profit organizations that engage in democratic and equitable\n                practices. Choice Coin holders will be able to use Choice to\n                vote for Choice charitable contributions.\n              </p>\n            </div>\n          </div>\n\n          <div className=\"rm_sec\">\n            <div className=\"rm_date\">\n              {width > br_point ? (\n                <>\n                  <span>\n                    <i className=\"uil uil-asterisk\"></i>\n                  </span>\n                  Q2 2022 -&nbsp;\n                </>\n              ) : (\n                <>\n                  <span>\n                    <i className=\"uil uil-asterisk\"></i>\n                  </span>\n                  Q2 2022 -&nbsp;Voting Application\n                </>\n              )}\n            </div>\n            <div className=\"rm_desc\">\n              {width > br_point && (\n                <p className=\"rm_desc_hd\">Voting Application</p>\n              )}\n              <p className=\"rm_desc_txt\">\n                The Choice Coin Network plans to launch a full-stack voting\n                application by the end of Q1 2022. This application will be an\n                update over the current Fortior Voting Protocol developed by\n                Fortior Blockchain, and will be live. It will allow any\n                organization across the world to vote using Choice Coin and the\n                Choice Coin Network. The launch of this interactive platform\n                will enable Choice Coin to be used more widely for its use-case\n                and spread decentralized voting as a legitimate form of\n                governance.\n              </p>\n            </div>\n          </div>\n\n          <div className=\"rm_sec\">\n            <div className=\"rm_date\">\n              {width > br_point ? (\n                <>\n                  <span>\n                    <i className=\"uil uil-asterisk\"></i>\n                  </span>\n                  Presently -&nbsp;\n                </>\n              ) : (\n                <>\n                  <span>\n                    <i className=\"uil uil-asterisk\"></i>\n                  </span>\n                  Presently Ongoing\n                </>\n              )}\n            </div>\n            <div className=\"rm_desc\">\n              {width > br_point && <p className=\"rm_desc_hd\">Ongoing</p>}\n              <p className=\"rm_desc_txt\">\n                The Choice Coin Network plans to continue allocating resources\n                and assets to its rewards programs. These rewards programs have\n                been extremely effective over the past two months, with the\n                network growing at an exponential rate with regards to academic\n                output, social media presence, and development. The Choice Coin\n                Community remains keen on growing its membership in the months\n                to come.\n              </p>\n            </div>\n          </div>\n\n          {/*=========================*/}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Roadmap;\n","import \"../styles/landing.css\";\nimport loadable from \"@loadable/component\";\nconst ScrollTextLand = loadable(() => import(\"../components/ScrollTextLand\"));\n\nconst Landing = () => {\n  return (\n    <div className=\"landing\" id=\"landing\">\n      <ScrollTextLand\n        word={\"Join our discord channel and help grow our codebase\"}\n      />\n\n      <div className=\"land_cov\">\n        <div className=\"land_item1\">\n          <p className=\"hdy\">\n            The Democratic <br /> Token Built Just For <br /> a New Age.\n          </p>\n          <p className=\"suby\">\n            Choice Coin is an Algorand Standard Asset that powers Decentralized\n            Decisions, a voting and governance software built directly on the\n            Algorand Blockchain.\n            <br />\n            <br />\n            Decentralized Decisions enables organizations to make governance\n            decisions in an open and decentralized manner.\n          </p>\n        </div>\n\n        <div className=\"land_item2\">\n          <SvgBack />\n        </div>\n\n        <div className=\"land_item1\">\n          <p className=\"suby\">\n            For the Choice Coin DAO, Decentralized Decisions leverages\n            Proof-of-Participation as a governance mechanism, allowing voters to\n            have a larger say in direct proportion to their contribution to the\n            network.\n          </p>\n        </div>\n\n        <div className=\"land_butts\">\n          <a href=\"https://fortiorblockchain.com/\" className=\"ld_butt\">\n            What's Fortior?\n          </a>\n          <a href=\"https://fortiorblockchain.com/\" className=\"ld_butt\">\n            About Choice\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst SvgBack = () => {\n  return (\n    <div className=\"svg_back\">\n      <svg\n        viewBox=\"0 0 1920 2000\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className=\"svg_back_svg\"\n      >\n        <g\n          style={{\n            // transform: \"translate(-665px, -541px)\",\n            transform: \"translate(-665px, -641px)\",\n          }}\n        >\n          <path\n            id=\"path-1\"\n            d=\"M850,465.2306038553079C958.8144764947031,461.39226371873275,1021.4825449934733,574.690630100371,1097.602194324131,652.5438389976157C1192.8323916982479,749.9428222389499,1368.671034936332,828.728799358622,1334.2725557328813,960.5320506722703C1299.8481110256396,1092.434792948918,1107.555018272517,1074.29745287207,977.1577704117068,1114.0458310003419C884.7147604742252,1142.2247977698926,792.9447122651261,1191.0425020323207,704.2918459583884,1152.5660995224646C612.1944538591086,1112.5947316903269,551.2051870411254,1021.0010708275778,534.6264511362035,921.9819545234247C519.1154830331442,829.340249908849,570.0034794286372,746.5677468829045,623.3740579709078,669.2718420013925C684.1383971386729,581.2676511384526,743.1223621382509,469.0006236203441,850,465.2306038553079 \"\n            style={{\n              // transform: \"scale(1.3) translate(-256px, -132px)\",\n              transform: \"scale(1.3) translate(-160px, -200px)\",\n            }}\n          ></path>\n          <path\n            id=\"path-2\"\n            d=\"M850,465.2306038553079C958.8144764947031,461.39226371873275,1021.4825449934733,574.690630100371,1097.602194324131,652.5438389976157C1192.8323916982479,749.9428222389499,1368.671034936332,828.728799358622,1334.2725557328813,960.5320506722703C1299.8481110256396,1092.434792948918,1107.555018272517,1074.29745287207,977.1577704117068,1114.0458310003419C884.7147604742252,1142.2247977698926,792.9447122651261,1191.0425020323207,704.2918459583884,1152.5660995224646C612.1944538591086,1112.5947316903269,551.2051870411254,1021.0010708275778,534.6264511362035,921.9819545234247C519.1154830331442,829.340249908849,570.0034794286372,746.5677468829045,623.3740579709078,669.2718420013925C684.1383971386729,581.2676511384526,743.1223621382509,469.0006236203441,850,465.2306038553079 \"\n            style={{\n              transform: \"scale(1.15) translate(-90px, -120px)\",\n            }}\n          ></path>\n          <path\n            id=\"path-3\"\n            d=\"M850,465.2306038553079C958.8144764947031,461.39226371873275,1021.4825449934733,574.690630100371,1097.602194324131,652.5438389976157C1192.8323916982479,749.9428222389499,1368.671034936332,828.728799358622,1334.2725557328813,960.5320506722703C1299.8481110256396,1092.434792948918,1107.555018272517,1074.29745287207,977.1577704117068,1114.0458310003419C884.7147604742252,1142.2247977698926,792.9447122651261,1191.0425020323207,704.2918459583884,1152.5660995224646C612.1944538591086,1112.5947316903269,551.2051870411254,1021.0010708275778,534.6264511362035,921.9819545234247C519.1154830331442,829.340249908849,570.0034794286372,746.5677468829045,623.3740579709078,669.2718420013925C684.1383971386729,581.2676511384526,743.1223621382509,469.0006236203441,850,465.2306038553079 \"\n            style={{\n              transform: \"scale(1) translate(-0px, -0px)\",\n            }}\n          ></path>\n        </g>\n      </svg>\n    </div>\n  );\n};\n\nexport default Landing;\n","import \"../styles/founders.css\";\nimport loadable from \"@loadable/component\";\nconst ScrollText = loadable(() => import(\"../components/ScrollText\"));\n\nconst Founders = () => {\n  return (\n    <div className=\"founders\">\n      <ScrollText word={\"Meet the Team\"} />\n\n      <div className=\"found_scr\">\n        <div className=\"founder_box\">\n          <div className=\"founder_img\">\n            <img src=\"./img/1.webp\" alt=\"\" />\n          </div>\n          <div className=\"founder_det\">\n            <p className=\"fo_name\">Archie Chaudhury</p>\n            <p className=\"fo_pos\">Co Founder</p>\n          </div>\n        </div>\n        <div className=\"founder_box\">\n          <div className=\"founder_img\">\n            <img src=\"./img/2.webp\" alt=\"\" />\n          </div>\n          <div className=\"founder_det\">\n            <p className=\"fo_name\">Brian Haney</p>\n            <p className=\"fo_pos\">Co Founder</p>\n          </div>\n        </div>\n        <div className=\"founder_box\">\n          <div className=\"founder_img\">\n            <img src=\"./img/3.webp\" alt=\"\" />\n          </div>\n          <div className=\"founder_det\">\n            <p className=\"fo_name\">Oligbo Julie</p>\n            <p className=\"fo_pos\">Senior Dev</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Founders;\n","import Footer from \"./components/Footer\";\nimport Roadmap from \"./sections/Roadmap\";\nimport Landing from \"./sections/Landing\";\nimport Founders from \"./sections/Founders\";\n\nconst Home = () => {\n  return (\n    <>\n      <Landing />\n      <Roadmap />\n      <Founders />\n      <Footer />\n    </>\n  );\n};\n\nexport default Home;\n","import axios from \"axios\";\nimport \"../styles/startelect.css\";\nimport { URL } from \"../constants\";\nimport { useQuery } from \"react-query\";\nimport { useDispatch } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nconst StartElection = () => {\n  // wallet-type & address\n  const walletAddress = localStorage.getItem(\"address\");\n\n  const headers = { \"X-Wallet-Address\": walletAddress };\n  const [myData, setMyData] = useState([]);\n\n  const { isLoading, error } = useQuery(\"elections\", () => {\n    if (walletAddress) {\n      axios.get(`${URL}/elections/mine`, { headers }).then((response) => {\n        setMyData(response.data.data);\n        return response.data;\n      });\n    } else {\n      return null;\n    }\n  });\n\n  const isWalletConnected =\n    localStorage.getItem(\"wallet-type\") === null ? false : true;\n  const dispatch = useDispatch();\n\n  if (isLoading) return <></>;\n\n  if (error) return console.log(\"An error has occurred: \" + error?.message);\n\n  return (\n    <div className=\"stt_elt\">\n      <div className=\"stt_elt_inn\">\n        <div className=\"stt_hd\">Recently Created Elections</div>\n\n        <ul className=\"on_elt\">\n          {!!(myData.length > 0) ? (\n            myData?.map((item, index) => {\n              return (\n                <li\n                  key={`${index}`}\n                  className=\"elt_item\"\n                  onClick={() =>\n                    dispatch({ type: \"popupElection\", payload: item })\n                  }\n                >\n                  <div className=\"elt_img_cont\">\n                    <img src={item.process_image} alt=\"\" />\n                  </div>\n                  <div className=\"elt_det\">\n                    <p className=\"e_det_main\">{`${item.title}`}</p>\n                    <p className=\"e_det_sub\">{`${\n                      !!item.description\n                        ? item.description\n                        : \"No description provided\"\n                    }`}</p>\n                  </div>\n                  <div className=\"pop_butt\">\n                    <i className=\"uil uil-ellipsis-v\"></i>\n                  </div>\n                </li>\n              );\n            })\n          ) : (\n            <>\n              <div\n                style={{\n                  flex: 1,\n                  opacity: 0.7,\n                  width: \"100%\",\n                  display: \"flex\",\n                  fontSize: \"14px\",\n                  color: \"var(--wht)\",\n                  letterSpacing: \"1px\",\n                  alignItems: \"center\",\n                  padding: \"10px 20px\",\n                  textAlign: \"center\",\n                  justifyContent: \"center\",\n                  textTransform: \"uppercase\",\n                }}\n              >\n                <p style={{ lineHeight: \"20px\" }}>\n                  Your Elections are displayed here once you connect your wallet\n                </p>\n              </div>\n            </>\n          )}\n        </ul>\n\n        <div\n          style={{\n            display: \"flex\",\n            width: \"100%\",\n            margin: \"20px 0px 30px\",\n            alignItems: \"center\",\n            flexDirection: \"column\",\n          }}\n        >\n          <i className=\"uil uil-arrow-break\"></i>\n        </div>\n\n        <div className=\"stt_hd\">do any of the following</div>\n        <div className=\"create_elect\">\n          {\n            // If Wallet is connected this would be true\n            !!isWalletConnected ? (\n              <NavLink\n                style={{\n                  width: \"100%\",\n                  height: \"100%\",\n                  textAlign: \"center\",\n                  cursor: \"pointer\",\n                }}\n                to={`./create`}\n                key={\"create\"}\n              >\n                Create New Election\n              </NavLink>\n            ) : (\n              <div\n                style={{\n                  width: \"100%\",\n                  height: \"100%\",\n                  textAlign: \"center\",\n                  cursor: \"pointer\",\n                }}\n                onClick={() => {\n                  dispatch({ type: \"modal_connect\" });\n                }}\n              >\n                Create New Election\n              </div>\n            )\n          }\n        </div>\n        <div className=\"participate_elt\">\n          <NavLink\n            style={{ width: \"100%\", height: \"100%\", textAlign: \"center\" }}\n            to={`../participate`}\n            key={\"participate\"}\n          >\n            Participate In Election\n          </NavLink>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StartElection;\n","import StartElection from \"../sections/StartElection\";\n\nconst Elections = () => {\n  return (\n    <>\n      <StartElection />\n    </>\n  );\n};\n\nexport default Elections;\n","import styled from \"styled-components\";\n\nexport const VoteListWrapper = styled.div<{\n  isVoteListCollapsed: boolean;\n}>`\n  width: 100%;\n  max-height: 0;\n  margin: ${({ isVoteListCollapsed }) =>\n    isVoteListCollapsed ? 0 : \"5px 0 10px\"};\n  overflow: hidden;\n  transition: max-height 0.2s ease-out, margin 0.2s ease-out;\n`;\nexport const VoteNowList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n\n  li {\n    margin: 5px 0px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    width: 50%;\n  }\n  p {\n    font-size: 12px;\n    color: var(--wht);\n    opacity: 0.7;\n    margin-left: 5px;\n  }\n  input[type=\"radio\"] {\n    margin: 0;\n    width: 16px;\n    height: 16px;\n    display: grid;\n    appearance: none;\n    margin-right: 10px;\n    border-radius: 100%;\n    place-content: center;\n    -webkit-appearance: none;\n    background-color: transparent;\n    border: 2px solid var(--bord-dark);\n\n    &::before {\n      content: \"\";\n      width: 8px;\n      height: 8px;\n      border-radius: 100%;\n      transform: scale(0);\n      background-color: var(--main-col);\n      transition: 120ms transform ease-in-out;\n    }\n\n    &:checked::before {\n      transform: scale(1);\n    }\n  }\n`;\nexport const CollapsedChart = styled.div<{ isChartCollapsed: boolean }>`\n  width: 100%;\n  max-height: 0;\n  margin-top: ${({ isChartCollapsed }) => (isChartCollapsed ? 0 : \"20px\")};\n  overflow: hidden;\n  transition: max-height 0.2s ease-out, margin-top 0.2s ease-out;\n`;\nexport const CandidatePercentage = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  margin: 3px 0px 3px;\n  padding-left: 5px;\n  align-items: center;\n  justify-content: center;\n  li {\n    font-size: 10px;\n    color: var(--wht);\n    margin-right: 10px;\n    opacity: 0.5;\n  }\n`;\nexport const LabelRow = styled.label`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n`\nexport const ChoiceCoinAmountRow = styled.label`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n\n  input {\n    text-align: right;\n    border-bottom: 1px solid;\n  }\n`","import { useDispatch, useSelector } from \"react-redux\";\nimport _ from \"lodash\";\nimport loadable from \"@loadable/component\";\nimport React, {\n  ChangeEvent,\n  MutableRefObject,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport {\n  CandidatePercentage,\n  ChoiceCoinAmountRow,\n  CollapsedChart,\n  LabelRow,\n  VoteListWrapper,\n  VoteNowList,\n} from \"./ElectionCard.styles\";\nimport { collapseOrExpandElement } from \"../utils/animation\";\nimport {\n  getAccountAssets,\n  IAssetData,\n  selectAddress,\n  selectAssets,\n  selectChain,\n  selectConnector,\n  selectWalletType,\n} from \"../store/walletSlice\";\nimport { ASSET_ID } from \"../constants\";\nimport { apiGetTxnParams } from \"../utils/api\";\nimport algosdk from \"algosdk\";\nimport { sendWait, sign } from \"../utils/walletUtils\";\nconst Chart = loadable(() => import(\"../components/Chart\"));\n\nexport interface Candidate {\n  name: string;\n  image: string;\n  address: string;\n}\nexport interface Election {\n  candidates: Candidate[];\n  wallet: {\n    address: \"\";\n  };\n  process_image: string;\n  title: string;\n  slug: string;\n  card_desc: string;\n  choice_per_vote: number;\n  card_cand: [\n    {\n      cand_score: number;\n      cand_det: string;\n    }\n  ];\n}\n\n// TODO: need to pull out the types\nconst ElectionCard: React.FC<{\n  scores: [];\n  options: [];\n  election: Election;\n}> = ({ scores, options, election }) => {\n  const [isVoteListCollapsed, setIsVoteListCollapsed] = useState(true);\n  const [isChartCollapsed, setIsChartCollapsed] = useState(true);\n  const [voteOptionChosen, setVoteOptionChosen] = useState(\"\");\n  const [voteChoiceAmount, setVoteChoiceAmount] = useState(\"0\");\n  const assets = useSelector(selectAssets);\n  const address = useSelector(selectAddress);\n  const chain = useSelector(selectChain);\n  const walletType = useSelector(selectWalletType);\n  const connector = useSelector(selectConnector);\n\n  const voteListWrapperRef = useRef() as MutableRefObject<HTMLInputElement>;\n  const collapsedChartRef = useRef() as MutableRefObject<HTMLInputElement>;\n\n  const dispatch = useDispatch();\n\n  const totalScore = _.sum(scores);\n\n  const submitVoteHandler = async () => {\n    if (!voteOptionChosen) {\n      alert(\"Select an option to vote!!\");\n      return;\n    }\n\n    // if the address trying to vote is the same as the election creator\n    if (address === election.wallet.address) {\n      alert(\"You cannot vote in an election you created\");\n      dispatch({ type: \"close_vote_modal\" });\n      return;\n    }\n\n    console.log(\"amount: \", voteChoiceAmount);\n    console.log(\"assets: \", assets);\n    // check if the voter address has Choice\n    const containsChoice = assets\n      ? assets.some((element: any) => element[\"id\"] === ASSET_ID)\n      : false;\n\n    if (assets.length === 0 || !containsChoice) {\n      alert(\"You need to opt into Choice Coin\");\n      dispatch({ type: \"close_vote_modal\" });\n      return;\n    }\n\n    const choiceCoin =\n      assets &&\n      assets.find((asset: IAssetData) => asset && asset.id === ASSET_ID);\n    console.log(\"input:\", Number(voteChoiceAmount) * 100);\n    console.log(\"i have amount: \", choiceCoin && choiceCoin.amount);\n\n    if (choiceCoin && Number(voteChoiceAmount) * 100 > choiceCoin.amount) {\n      alert(\"You do not have sufficient balance to make this transaction.\");\n      return;\n    }\n\n    if (choiceCoin && Number(voteChoiceAmount) < 0.01) {\n      alert(\"Minimum is 0.01 Choice Coin.\");\n      return;\n    }\n\n    const suggestedParams = await apiGetTxnParams(chain);\n\n    const _amount = Number(voteChoiceAmount) * 100;\n\n    const txn = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n      from: address,\n      to: voteOptionChosen,\n      amount: _amount,\n      assetIndex: ASSET_ID,\n      suggestedParams,\n    });\n\n    const signedTxn = await sign([txn], walletType, connector);\n    const result = await sendWait(signedTxn, chain);\n    if (result[\"pool-error\"])\n      throw new Error(\"Failed: \" + result[\"pool-error\"]);\n\n    // alert success\n    alert(\"You have successfully placed your vote for this election\");\n\n    dispatch(getAccountAssets({ chain, address }));\n  };\n\n  const choiceAmountChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\n    setVoteChoiceAmount(event.target.value);\n  };\n\n  const voteClickHandler = () => {\n    setIsVoteListCollapsed(!isVoteListCollapsed);\n  };\n\n  const viewResultClickHandler = () => {\n    setIsChartCollapsed(!isChartCollapsed);\n  };\n\n  const onVoteOptionChosen = (event: ChangeEvent<HTMLInputElement>) => {\n    setVoteOptionChosen(event.target.value);\n  };\n\n  const collapseOrExpandVoteList = useCallback(() => {\n    if (voteListWrapperRef && voteListWrapperRef.current) {\n      collapseOrExpandElement(voteListWrapperRef.current, isVoteListCollapsed);\n    }\n    // eslint-disable-next-line\n  }, [isVoteListCollapsed, voteListWrapperRef.current]);\n\n  const collapseOrExpandChart = useCallback(() => {\n    if (collapsedChartRef && collapsedChartRef.current) {\n      collapseOrExpandElement(collapsedChartRef.current, isChartCollapsed);\n    }\n    // eslint-disable-next-line\n  }, [isChartCollapsed, collapsedChartRef.current]);\n\n  useEffect(() => collapseOrExpandVoteList(), [collapseOrExpandVoteList]);\n  useEffect(() => collapseOrExpandChart(), [collapseOrExpandChart]);\n\n  if (!election) {\n    return null;\n  }\n\n  return (\n    <div className=\"card_cont\">\n      <div className=\"card_r1\">\n        <div className=\"card_elt_img\">\n          <img src={election.process_image} alt=\"\" />\n        </div>\n        <div className=\"card_elt_tit\">{election.title}</div>\n      </div>\n\n      <div className=\"card_elt_desc\">{election?.card_desc}</div>\n\n      <div className=\"card_cand\">\n        <div className=\"card_cand_hd\">\n          <p>Candidates</p>\n          <p>Amt:&nbsp;{election?.choice_per_vote}</p>\n        </div>\n\n        <ul className=\"card_cand_list\">\n          {election?.candidates?.map((item, index) => (\n            <li className=\"cand_item\" key={index}>\n              <div className=\"cand_img_cont\">\n                {!!item.image ? (\n                  <img src={item.image} alt=\"\" />\n                ) : (\n                  <i className=\"uil uil-asterisk\"></i>\n                )}\n              </div>\n              <p className=\"cand_det\">{item.name}</p>\n            </li>\n          ))}\n        </ul>\n\n        <CollapsedChart isChartCollapsed={isChartCollapsed}>\n          <Chart scores={scores} options={options} />\n          <CandidatePercentage>\n            {election?.card_cand?.map((item, index) => (\n              <li key={index}>\n                {Math.floor((item.cand_score / totalScore) * 100)}\n                %&nbsp;\n                {item.cand_det}\n              </li>\n            ))}\n          </CandidatePercentage>\n        </CollapsedChart>\n\n        <VoteListWrapper\n          isVoteListCollapsed={isVoteListCollapsed}\n          ref={voteListWrapperRef}\n        >\n          <div className=\"card_cand_hd\">Options</div>\n          <VoteNowList>\n            {election?.candidates?.map((item, index) => {\n              return (\n                <li key={index}>\n                  <input\n                    type=\"radio\"\n                    id={election.slug}\n                    name=\"options\"\n                    value={item.address}\n                    onChange={onVoteOptionChosen}\n                  />\n\n                  <LabelRow htmlFor={election.slug}>\n                    <div className=\"vote_img_cont\">\n                      {!!item.image ? (\n                        <img src={item.image} alt=\"\" />\n                      ) : (\n                        <i className=\"uil uil-asterisk\"></i>\n                      )}\n                    </div>\n                    <p>{item.name}</p>\n                  </LabelRow>\n                </li>\n              );\n            })}\n          </VoteNowList>\n          <ChoiceCoinAmountRow>\n            <span className=\"card_cand_hd\">Choice Coin Amount</span>\n            <input\n              type=\"number\"\n              value={voteChoiceAmount}\n              onChange={choiceAmountChangeHandler}\n            ></input>\n          </ChoiceCoinAmountRow>\n\n          <div className=\"rec_vote_cont\">\n            <button className=\"record_vote\" onClick={submitVoteHandler}>\n              Submit vote\n            </button>\n          </div>\n        </VoteListWrapper>\n\n        <div className=\"card_butts\">\n          <button onClick={voteClickHandler}>\n            Vote now\n            <i\n              className={`uil ${\n                isVoteListCollapsed ? \"uil-angle-down\" : \"uil-angle-up\"\n              }`}\n            ></i>\n          </button>\n          <button onClick={viewResultClickHandler}>\n            View Result\n            <i\n              className={`uil ${\n                isChartCollapsed ? \"uil-angle-down\" : \"uil-angle-up\"\n              }`}\n            ></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ElectionCard;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst spin = keyframes`\n  0% {\n    -webkit-transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n  }\n}`;\n\nconst LoadingIcon = styled.div`\n  display: block;\n  position: relative;\n  width: 2.5rem;\n  height: 2.5rem;\n  margin: auto;\n\n  span {\n    box-sizing: border-box;\n    content: \"\";\n    position: absolute;\n    width: 2.5rem;\n    height: 2.5rem;\n    top: 0;\n    left: 0;\n    border: 0.25rem solid var(--main-col);\n    border-radius: 50%;\n    border-top: 0.25rem solid transparent;\n    animation: ${spin} 2s linear infinite;\n  }\n`;\n\nconst Loader: React.FC = () => {\n  return (\n    <LoadingIcon>\n      <span></span>\n    </LoadingIcon>\n  );\n};\n\nexport default Loader;\n","import styled from \"styled-components\";\nimport { useQuery } from \"react-query\";\nimport axios from \"axios\";\nimport \"./electionlist.css\";\nimport { URL } from \"../constants\";\nimport ElectionCard from \"./ElectionCard\";\nimport Loader from \"../components/Loader\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: calc(100vh - 2.5rem);\n`;\n\nconst Participate = () => {\n  const { isLoading, error, data } = useQuery(\"elections\", () =>\n    axios.get(`${URL}/elections`).then((response) => response.data.data)\n  );\n\n  if (isLoading)\n    return (\n      <Wrapper>\n        <Loader />\n      </Wrapper>\n    );\n\n  if (error)\n    return <>An error has occurred: ${(error as ErrorEvent).message}</>;\n  return (\n    <div className=\"ptt_elt\">\n      <div className=\"ptt_elt_inn\">\n        <div className=\"ptt_hd\">\n          <p>Participate in Ongoing Elections</p>\n        </div>\n        <ul className=\"card_list\">\n          {data?.map((election: any, index: any) => {\n            const scores = election?.candidates.map((data: any) =>\n              data?.votes ? data?.votes : 0\n            );\n            const options = election?.candidates.map((data: any) => data?.name);\n\n            return (\n              <ElectionCard\n                scores={scores}\n                options={options}\n                election={election}\n                key={index}\n              />\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Participate;\n","import \"../styles/transfer.css\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ASSET_ID } from \"../constants\";\nimport algosdk from \"algosdk\";\nimport MyAlgoConnect from \"@randlabs/myalgo-connect\";\n\nconst Index = () => {\n  const [amount, setAmount] = useState(0);\n  const [addr, setAddr] = useState(\"\");\n\n  const [balance, setBalance] = useState(0);\n\n  const dispatch = useDispatch();\n\n  // algod Client\n  const algodClient = new algosdk.Algodv2(\n    {\n      \"X-API-Key\": \"Xy8NsXxfJg2cQ2YQ4pax6aLrTcj55jZ9mbsNCM30 \",\n    },\n    \"https://testnet-algorand.api.purestake.io/ps2\",\n    \"\"\n  );\n\n  const myAlgoWallet = new MyAlgoConnect();\n\n  // wallet-type & address\n  const walletType = localStorage.getItem(\"wallet-type\");\n  const walletAddress = localStorage.getItem(\"address\");\n\n  const makeTransfer = async () => {\n    // check if localStorage items were deleted.\n    if (!walletType || !walletAddress) {\n      dispatch({ type: \"modal_connect\" });\n      return;\n    }\n\n    const myAccountInfo = await algodClient\n      .accountInformation(walletAddress)\n      .do();\n\n    if (myAccountInfo.assets.length === 0) {\n      alert(\"You need to optin to Choice Coin\");\n      return;\n    }\n\n    // const receiverAccountInfo = await algodClient.accountInformation(addr).do();\n\n    // compare amount to send with user balance\n    if (amount > balance) {\n      alert(\"You do not have sufficient balance to make this transaction.\");\n      return;\n    }\n\n    // send choice to wallet\n    const suggestedParams = await algodClient.getTransactionParams().do();\n    const amountToSend = Math.abs(amount * 100);\n    // console.log(typeof amountToSend, amountToSend);\n\n    const txn = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n      from: walletAddress,\n      to: addr,\n      amount: amountToSend,\n      assetIndex: ASSET_ID,\n      suggestedParams,\n    });\n\n    // based on wallet type\n    try {\n      if (walletType === \"my-algo\") {\n        const signedTxn = await myAlgoWallet.signTransaction(txn.toByte());\n        await algodClient.sendRawTransaction(signedTxn.blob).do();\n      } else if (walletType === \"algosigner\") {\n        const signedTxn = await window.AlgoSigner.signTxn([\n          { txn: window.AlgoSigner.encoding.msgpackToBase64(txn.toByte()) },\n        ]);\n        await algodClient\n          .sendRawTransaction(\n            window.AlgoSigner.encoding.base64ToMsgpack(signedTxn[0].blob)\n          )\n          .do();\n      }\n\n      alert(`${amount} $CHOICE sent successfully to ${addr}!`);\n    } catch (error) {\n      console.log(error);\n      window.location.reload();\n    }\n  };\n\n  const setMaxBalance = () => {\n    setAmount(balance);\n  };\n\n  useEffect(() => {\n    const setMyBalance = async () => {\n      const myAccountInfo = await algodClient\n        .accountInformation(walletAddress)\n        .do();\n\n      const b = myAccountInfo.assets\n        ? myAccountInfo.assets.find(\n            (element) => element[\"asset-id\"] === ASSET_ID\n          ).amount / 100\n        : 0;\n\n      setBalance(b);\n    };\n\n    setMyBalance();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"transfer_cont\">\n      <div className=\"transfer_cont_inn\">\n        <div className=\"trans_hd\">Transfer Choices To Any Address here</div>\n\n        <div className=\"transf_inps\">\n          <div className=\"transf_input_cover\">\n            <p className=\"trsf_amt\">Amount to send</p>\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n              <input\n                type=\"number\"\n                value={amount}\n                onChange={(e) => setAmount(e.target.value)}\n              />\n\n              <div className=\"trsf_max\">\n                <button onClick={setMaxBalance}>Max</button>\n              </div>\n            </div>\n          </div>\n\n          <div\n            style={{\n              width: \"30px\",\n              height: \"30px\",\n              display: \"flex\",\n              fontSize: \"17px\",\n              borderRadius: \"100%\",\n              alignItems: \"center\",\n              margin: \"10px 0px\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              border: \"1px solid var(--txt-alt)\",\n            }}\n          >\n            <i\n              className=\"uil uil-exchange\"\n              style={{ transform: \"rotate(90deg)\" }}\n            ></i>\n          </div>\n\n          <div className=\"transf_input_cover\">\n            <input\n              type=\"text\"\n              value={addr}\n              placeholder=\"Wallet address to send to\"\n              onChange={(e) => setAddr(e.target.value)}\n            />\n          </div>\n\n          <button className=\"submitTrsf\" onClick={makeTransfer}>\n            Transfer Assets\n          </button>\n\n          {/*  */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Index;\n","import { useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport MyAlgoConnect from \"@randlabs/myalgo-connect\";\nimport axios from \"axios\";\nimport algosdk from \"algosdk\";\nimport \"../styles/createelection.css\";\nimport { URL } from \"../constants\";\nconst CreateElection = () => {\n  // algod Client\n  const algodClient = new algosdk.Algodv2(\n    {\n      \"X-API-Key\": \"Xy8NsXxfJg2cQ2YQ4pax6aLrTcj55jZ9mbsNCM30 \",\n    },\n    \"https://testnet-algorand.api.purestake.io/ps2\",\n    \"\"\n  );\n\n  const myAlgoWallet = new MyAlgoConnect();\n\n  // wallet-type & address\n  const walletType = localStorage.getItem(\"wallet-type\");\n  const walletAddress = localStorage.getItem(\"address\");\n\n  const dispatch = useDispatch();\n  const [items, setitems] = useState([]);\n\n  const [itemInp, setItemInp] = useState(\"\");\n  const [processTit, setProcessTit] = useState(\"\");\n  const [electionDescription, setElectionDesciption] = useState(\"\");\n\n  const [choiceToSend, setChoiceToSend] = useState(1);\n\n  const hdImgPicker = useRef(null);\n  const itemImgPicker = useRef(null);\n  const [hdImg, setHdImg] = useState(null);\n  const [itemImg, setItemImg] = useState(null);\n\n  const addHeaderImage = (e) => {\n    const reader = new FileReader();\n    if (e.target.files[0]) {\n      reader.readAsDataURL(e.target.files[0]);\n    }\n\n    reader.onload = (readerEvent) => {\n      setHdImg(readerEvent.target.result);\n    };\n  };\n\n  const addItemImg = (e) => {\n    const reader = new FileReader();\n    if (e.target.files[0]) {\n      reader.readAsDataURL(e.target.files[0]);\n    }\n\n    reader.onload = (readerEvent) => {\n      setItemImg(readerEvent.target.result);\n    };\n  };\n\n  const addItem = () => {\n    if (itemInp.trim().length > 0 && !items.includes(itemInp)) {\n      setitems((prev) => [\n        ...prev,\n        { name: itemInp, image: itemImg ? itemImg : \"\" },\n      ]);\n      setItemInp(\"\");\n      setItemImg(null);\n    }\n    return;\n  };\n\n  const removeItem = (item) => {\n    setitems(items?.filter((it) => it !== item));\n  };\n\n  const createCandidates = (candidates) => {\n    const candidatesCred = [];\n    for (let candidate of candidates) {\n      const { sk: private_key, addr: address } = algosdk.generateAccount();\n      candidatesCred.push({\n        ...candidate,\n        private_key: algosdk.secretKeyToMnemonic(private_key),\n        address,\n      });\n    }\n\n    return candidatesCred;\n  };\n\n  // send 1ALGO to all candidates\n  const topUpCandidates = async (candidates) => {\n    // array to store all txn object for all candidates\n    const txns = [];\n    const AMOUNT = 1000000;\n\n    const suggestedParams = await algodClient.getTransactionParams().do();\n\n    for (let candidate of candidates) {\n      const txn = algosdk.makePaymentTxnWithSuggestedParamsFromObject({\n        from: walletAddress,\n        to: candidate.address,\n        amount: AMOUNT,\n        suggestedParams,\n      });\n      txns.push(txn);\n    }\n\n    // get the group ID and assign to all transactions\n    const groupID = algosdk.computeGroupID(txns);\n    for (let i = 0; i < txns.length; i++) txns[i].group = groupID;\n\n    // sign txns based on the wallet used to login\n    let continueExecution = true;\n    try {\n      if (walletType === \"algosigner\") {\n        const signedTxns = await window.AlgoSigner.signTxn(\n          txns.map((txn) => ({\n            txn: window.AlgoSigner.encoding.msgpackToBase64(txn.toByte()),\n          }))\n        );\n        await algodClient\n          .sendRawTransaction(\n            signedTxns.map((txn) =>\n              window.AlgoSigner.encoding.base64ToMsgpack(txn.blob)\n            )\n          )\n          .do();\n      } else if (walletType === \"my-algo\") {\n        const signedTxns = await myAlgoWallet.signTransaction(\n          txns.map((txn) => txn.toByte())\n        );\n\n        // send the transactions to the net.\n        await algodClient\n          .sendRawTransaction(signedTxns.map((txn) => txn.blob))\n          .do();\n      }\n    } catch (error) {\n      console.log(error);\n      continueExecution = false;\n    }\n\n    return continueExecution;\n  };\n\n  const optinCandidates = async (candidates) => {\n    // choice coin asset ID\n    const assetIndex = 21364625;\n\n    // amount of CHoice to send. `0` for Opt In\n    const amount = 0;\n\n    const suggestedParams = await algodClient.getTransactionParams().do();\n\n    for (let candidate of candidates) {\n      const transactionOptions = {\n        from: candidate.address,\n        to: candidate.address,\n        closeRemainderTo: undefined,\n        revocationTarget: undefined,\n        amount,\n        assetIndex,\n        suggestedParams,\n      };\n      const txn =\n        algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject(\n          transactionOptions\n        );\n\n      const { sk } = algosdk.mnemonicToSecretKey(candidate.private_key);\n      const signedTxn = txn.signTxn(sk);\n\n      // send the transactions to the net.\n      await algodClient.sendRawTransaction(signedTxn).do();\n    }\n  };\n\n  // Create Election Function\n  const createElection = async () => {\n    // check if localStorage items were deleted.\n    if (!walletType || !walletAddress) {\n      dispatch({ type: \"modal_connect\" });\n      return;\n    }\n\n    if (processTit.trim().length < 1) {\n      alert(\"Process Title required!\");\n      return;\n    }\n\n    if (items.length < 2) {\n      alert(\"Minimum of two candidates required!\");\n      return;\n    }\n\n    // check if the user has sufficient balance to go on with the transaction\n    const accountInformation = await algodClient\n      .accountInformation(walletAddress)\n      .do();\n    const myBalance = accountInformation.amount / 1000000;\n    if (myBalance < items.length * choiceToSend + 1) {\n      alert(\n        \"Your balance does not meet the requirement to create an election with specified candidates.\"\n      );\n      return;\n    }\n\n    const electionData = {\n      process_image: hdImg ? hdImg : \"\",\n      candidates: items,\n      processTit,\n      electionDescription,\n      choiceToSend,\n    };\n\n    // create candidates address and secretKey\n    const updatedCandidates = createCandidates(electionData.candidates);\n\n    topUpCandidates(updatedCandidates).then((continueExecution) => {\n      if (continueExecution) {\n        optinCandidates(updatedCandidates).then(() => {\n          const headers = {\n            \"X-Wallet-Address\": walletAddress,\n          };\n          // add choice per vote input\n          axios\n            .post(\n              `${URL}/elections/create`,\n              {\n                candidates: updatedCandidates,\n                choice_per_vote: electionData.choiceToSend,\n                process_image: electionData.process_image,\n                title: electionData.processTit,\n                description: electionData.electionDescription,\n              },\n              { headers }\n            )\n            .then((response) => alert(response.data.message));\n        });\n      }\n    });\n\n    // Reset Inputs\n    // setitems([]);\n    // setHdImg(null);\n    // setItemInp(\"\");\n    // setProcessTit(\"\");\n    // setChoiceToSend(0);\n    // setElectionDesciption(\"\");\n\n    // Can redirect here\n  };\n\n  return (\n    <div className=\"create_elt\">\n      <div className=\"create_elt_inn\">\n        <div className=\"crt_hd\">\n          <p>Recently Created Elections</p>\n        </div>\n\n        {/* **************** */}\n        <div className=\"vote_sect\">\n          <div className=\"vote_sect_img\">\n            <div className=\"vote_hd_img\">\n              {hdImg ? (\n                <img src={hdImg} alt=\"\" />\n              ) : (\n                <i className=\"uil uil-image\" />\n              )}\n            </div>\n\n            <input\n              ref={hdImgPicker}\n              hidden\n              onChange={addHeaderImage}\n              type=\"file\"\n              accept=\".jpg, .jpeg, .png\"\n            />\n\n            <div\n              className=\"vote_add_img\"\n              onClick={() => hdImgPicker.current.click()}\n            >\n              <p>Add Election Header Image</p>\n            </div>\n          </div>\n\n          <div className=\"v_inp_cov inpCont_cand\">\n            <p className=\"inp_tit\">Election Title</p>\n            <input\n              type=\"text\"\n              placeholder=\"eg. Best cryptocurrency\"\n              value={processTit}\n              onChange={(e) => setProcessTit(e.target.value)}\n            />\n            <p className=\"ensure_txt\">\n              Entries must be of minimum length of one.\n            </p>\n          </div>\n\n          <div className=\"v_inp_cov inpCont_cand\">\n            <p className=\"inp_tit\">Election Description</p>\n            <input\n              type=\"text\"\n              placeholder=\"Describe process\"\n              value={electionDescription}\n              onChange={(e) => setElectionDesciption(e.target.value)}\n            />\n            <p className=\"ensure_txt\">\n              A meaningful text to describe your election process.\n            </p>\n          </div>\n\n          <div className=\"v_inp_cov inpCont_cand\">\n            <p className=\"inp_tit\">Choice per vote</p>\n            <input\n              type=\"number\"\n              value={choiceToSend}\n              min=\"1\"\n              onChange={(e) => setChoiceToSend(e.target.value)}\n            />\n            <p className=\"ensure_txt\">\n              Amount of $CHOICE required to participate in this election\n            </p>\n          </div>\n\n          {/* ************** */}\n          <div className=\"v_inp_cov inpCont_cand\">\n            <p className=\"inp_tit\">Candidates</p>\n            <div className=\"add_item_sect\">\n              <div className=\"add_item_sect_r1\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Choice Coin\"\n                  value={itemInp}\n                  onChange={(e) => setItemInp(e.target.value)}\n                />\n\n                <div className=\"item_img_preview\">\n                  {itemImg ? (\n                    <img src={itemImg} alt=\"\" />\n                  ) : (\n                    <i className=\"uil uil-image\" />\n                  )}\n                </div>\n\n                <input\n                  ref={itemImgPicker}\n                  hidden\n                  onChange={addItemImg}\n                  type=\"file\"\n                  accept=\".jpg, .jpeg, .png\"\n                />\n\n                <div\n                  className=\"add_butt\"\n                  onClick={() => itemImgPicker.current.click()}\n                >\n                  <p>Add Image</p>\n                </div>\n              </div>\n              <p className=\"ensure_txt\">\n                Entries must be of minimum length of one.\n              </p>\n            </div>\n\n            <div className=\"addItemButt\" onClick={() => addItem()}>\n              <p>Add Election Participant</p>\n            </div>\n          </div>\n\n          {items?.map((item, index) => (\n            <div className=\"item_list\" key={index}>\n              <div className=\"item_list_img\">\n                {item?.image ? (\n                  <img src={item?.image} alt=\"\" />\n                ) : (\n                  <i className=\"uil uil-asterisk\" />\n                )}\n              </div>\n\n              <div className=\"item_list_name\">\n                <p>{item.name}</p>\n              </div>\n\n              <div className=\"rm_butt\" onClick={() => removeItem(item)}>\n                <p>Delete Participant</p>\n              </div>\n            </div>\n          ))}\n\n          <br />\n\n          <div className=\"crt_butt\">\n            <button onClick={createElection}>Create Election</button>\n            <p className=\"safety\">\n              <span>Safety disclaimer :</span> We never store your data.\n              Everything is encrypted.\n            </p>\n          </div>\n\n          {/* ************** */}\n        </div>\n\n        {/* **************** */}\n      </div>\n    </div>\n  );\n};\n\nexport default CreateElection;\n","import styled, {css} from \"styled-components\";\nimport Switch from \"react-switch\";\nimport { useDispatch } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\n\nconst ToggleWrapper = styled.div`\n  margin-right: 15px;\n`\n\nconst iconWrapperSharedStyles = css`\n  display: flex;\n  align-items: center;\n  font-size: 14px;\n  padding: 2px 4px;\n`\n\nconst IconWrapperLeft = styled.div`\n  ${iconWrapperSharedStyles}\n  justify-content: flex-start;\n`\n\nconst IconWrapperRight = styled.div`\n  ${iconWrapperSharedStyles}\n  justify-content: flex-end;\n`\n\nconst Toggle = ({ darkTheme }) => {\n  const dispatch = useDispatch();\n\n  const [checked, setChecked] = useState(false);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"mode\") === \"light\") {\n      setChecked(true);\n    }\n  }, []);\n\n  const handleChange = (nextChecked) => {\n    setChecked(nextChecked);\n\n    if (!darkTheme) {\n      localStorage.setItem(\"mode\", \"dark\");\n      dispatch({ type: \"dark_mode\" });\n    } else {\n      localStorage.setItem(\"mode\", \"light\");\n      dispatch({ type: \"light_mode\" });\n    }\n  };\n\n  return (\n    <ToggleWrapper>\n      <label htmlFor=\"small-radius-switch\">\n        <p style={{ width: \"0px\", height: \"0px\", overflow: \"hidden\" }}>\n          Toggle\n        </p>\n      </label>\n      <Switch\n        checked={checked}\n        onChange={handleChange}\n        handleDiameter={18}\n        offColor=\"#222\"\n        onColor=\"#eee\"\n        offHandleColor=\"#eee\"\n        onHandleColor=\"#444\"\n        width={42}\n        height={18}\n        borderRadius={90}\n        boxShadow=\"0px 1px 4px rgba(0, 0, 0, 0.6)\"\n        activeBoxShadow=\"0px 0px 1px 6px rgba(0, 0, 0, 0.2)\"\n        checkedIcon={<IconWrapperLeft><i className=\"fas fa-sun\"></i></IconWrapperLeft>}\n        uncheckedIcon={<IconWrapperRight><i className=\"far fa-moon\"></i></IconWrapperRight>}\n        className=\"react-switch\"\n        id=\"small-radius-switch\"\n      />\n    </ToggleWrapper>\n  );\n};\n\nexport default Toggle;\n","import styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\n\nconst ConnectButton = styled.button`\n  align-self: center;\n  line-height: 1;\n  font-size: 13px;\n  padding: 2.5px 8px;\n  border: 1px solid;\n  border-radius: 4px;\n`;\n\nconst ConnectWalletButton = () => {\n  const dispatch = useDispatch();\n  const openWalletOptionsModal = () => {\n    dispatch({\n      type: \"modal_connect_vote\",\n    });\n  };\n  return (\n    <ConnectButton onClick={openWalletOptionsModal}>\n      Connect Wallet\n    </ConnectButton>\n  );\n};\n\nexport default ConnectWalletButton;\n","export function capitalize(string: string): string {\n  return string\n    .split(\" \")\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n    .join(\" \");\n}\n\nexport function ellipseText(text = \"\", maxLength = 9999): string {\n  if (text.length <= maxLength) {\n    return text;\n  }\n  const _maxLength = maxLength - 3;\n  let ellipse = false;\n  let currentLength = 0;\n  const result =\n    `${text\n      .split(\" \")\n      .filter(word => {\n        currentLength += word.length;\n        if (ellipse || currentLength >= _maxLength) {\n          ellipse = true;\n          return false;\n        } \n        return true;\n      })\n      .join(\" \")  }...`;\n  return result;\n}\n\nexport function ellipseAddress(address = \"\", width = 6): string {\n  return `${address.slice(0, width)}...${address.slice(-width)}`;\n}\n\nexport function padLeft(n: string, width: number, z?: string): string {\n  z = z || \"0\";\n  n += \"\";\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}\n\nexport function sanitizeHex(hex: string): string {\n  hex = hex.substring(0, 2) === \"0x\" ? hex.substring(2) : hex;\n  if (hex === \"\") {\n    return \"\";\n  }\n  hex = hex.length % 2 !== 0 ? `0${  hex}` : hex;\n  return `0x${  hex}`;\n}\n\nexport function removeHexPrefix(hex: string): string {\n  return hex.toLowerCase().replace(\"0x\", \"\");\n}\n\nexport function getDataString(func: string, arrVals: any[]): string {\n  let val = \"\";\n  for (let i = 0; i < arrVals.length; i++) {\n    val += padLeft(arrVals[i], 64);\n  }\n  const data = func + val;\n  return data;\n}\n\nexport function isMobile(): boolean {\n  let mobile = false;\n\n  function hasTouchEvent(): boolean {\n    try {\n      document.createEvent(\"TouchEvent\");\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function hasMobileUserAgent(): boolean {\n    if (\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(\n        navigator.userAgent,\n      ) ||\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(\n        navigator.userAgent.substr(0, 4),\n      )\n    ) {\n      return true;\n    } if (hasTouchEvent()) {\n      return true;\n    }\n    return false;\n  }\n\n  mobile = hasMobileUserAgent();\n\n  return mobile;\n}\n\nexport function formatBigNumWithDecimals(num: bigint, decimals: number): string {\n  const singleUnit = BigInt(`1${  \"0\".repeat(decimals)}`);\n  const wholeUnits = num / singleUnit;\n  const fractionalUnits = num % singleUnit;\n  return `${wholeUnits.toString()  }.${  fractionalUnits.toString().padStart(decimals, \"0\")}`;\n}\n\nexport function formatAlgoWithDecimals(num: bigint, decimals: number): string {\n  const singleUnit = BigInt(`1${  \"0\".repeat(decimals)}`);\n  const wholeUnits = num / singleUnit;\n  const fractionalUnits = num % singleUnit;\n  return `${wholeUnits.toString()  }.${  fractionalUnits.toString().substring(0, 2)}`;\n}\n","import styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  ChainType,\n  IAssetData,\n  killSession,\n  selectAddress,\n  selectAssets,\n  selectChain,\n} from \"../store/walletSlice\";\nimport { ellipseAddress, formatBigNumWithDecimals } from \"../utils/stringUtils\";\nimport { ASSET_ID } from \"../constants\";\n\nconst AccountInfoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  align-self: center;\n  line-height: 1;\n  font-size: 13px;\n`;\nconst AssetInfo = styled.div`\n  margin-right: 8px;\n  padding: 2.5px 4px;\n  border: 1px solid;\n  border-radius: 4px;\n`;\nconst ConnectedAddressWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  button {\n    padding: 1.22px 4px;\n    color: #333;\n    background-color: #aaa;\n    margin-left: 4px;\n  }\n`;\nconst Address = styled.div`\n  align-self: center;\n  line-height: 1;\n  padding: 0 0 0 8px;\n  border: 1px solid;\n  border-radius: 4px;\n  overflow: hidden;\n`;\n\nexport const getChoiceCoinData = (assets: IAssetData[], chain: ChainType) => {\n  const choiceCoinAsaId = ASSET_ID; // testnet\n  const choiceCoin =\n    assets &&\n    assets.find((asset: IAssetData) => asset && asset.id === choiceCoinAsaId);\n  return choiceCoin;\n};\n\nexport const getAlgoAssetData = (assets: IAssetData[]) => {\n  let nativeCurrency =\n    assets && assets.find((asset: IAssetData) => asset && asset.id === 0);\n  if (nativeCurrency === undefined || nativeCurrency == null) {\n    nativeCurrency = {\n      id: 0,\n      amount: BigInt(0),\n      creator: \"\",\n      frozen: false,\n      decimals: 2,\n      name: \"Algo\",\n      unitName: \"Algo\",\n    };\n  }\n  return nativeCurrency;\n};\n\nconst AccountInfo = () => {\n  const address = useSelector(selectAddress);\n  const assets = useSelector(selectAssets);\n  const chain = useSelector(selectChain);\n  // eslint-disable-next-line\n  const nativeCurrency = getAlgoAssetData(assets);\n  const choiceCoin = getChoiceCoinData(assets, chain);\n  const dispatch = useDispatch();\n  if (!address) return <></>;\n  return (\n    <AccountInfoWrapper>\n      {choiceCoin && (\n        <AssetInfo>\n          Balance:{\" \"}\n          {formatBigNumWithDecimals(choiceCoin.amount, choiceCoin.decimals)}{\" \"}\n          {choiceCoin.unitName || \"units\"}\n        </AssetInfo>\n      )}\n      {/* Hide Algo balance on header for now */}\n      {/* <AssetInfo>\n        {formatAlgoWithDecimals(nativeCurrency.amount, nativeCurrency.decimals)}{\" \"}\n        {nativeCurrency.unitName || \"units\"}\n      </AssetInfo> */}\n      <ConnectedAddressWrapper>\n        <Address>\n          {ellipseAddress(address)}\n          <button onClick={() => dispatch(killSession())}>\n            <i className=\"fas fa-times\"></i>\n          </button>\n        </Address>\n      </ConnectedAddressWrapper>\n    </AccountInfoWrapper>\n  );\n};\n\nexport default AccountInfo;\n","import styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport {\n  ChainType,\n  IAssetData,\n  selectAddress,\n  selectAssets,\n  selectChain,\n} from \"../store/walletSlice\";\nimport { formatBigNumWithDecimals } from \"../utils/stringUtils\";\nimport { ASSET_ID } from \"../constants\";\nimport { useQuery } from \"react-query\";\nimport axios from \"axios\";\nimport { URL } from \"../constants\";\nimport { useEffect, useState } from \"react\";\nimport { indexerForChain } from \"../utils/api\";\nimport { Election } from \"../participate/ElectionCard\";\n\nconst TotalCommittedChoiceWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  align-self: center;\n  line-height: 1;\n  font-size: 13px;\n  padding: 2.5px 4px;\n  border: 1px solid;\n  border-radius: 4px;\n  margin-right: 8px;\n`;\n\nexport const getChoiceCoinData = (assets: IAssetData[], chain: ChainType) => {\n  const choiceCoinAsaId = ASSET_ID; // testnet\n  const choiceCoin =\n    assets &&\n    assets.find((asset: IAssetData) => asset && asset.id === choiceCoinAsaId);\n  return choiceCoin;\n};\n\nconst TotalCommittedChoice = () => {\n  const { isLoading, error, data } = useQuery(\"elections\", () =>\n    axios.get(`${URL}/elections`).then((response) => response.data.data)\n  );\n  const address = useSelector(selectAddress);\n  const assets = useSelector(selectAssets);\n  const chain = useSelector(selectChain);\n  const choiceCoin = getChoiceCoinData(assets, chain);\n  const [\n    userTotalCommittedChoiceToVoting,\n    setUserTotalCommittedChoiceToVoting,\n  ] = useState<bigint>(BigInt(0));\n\n  useEffect(() => {\n    if (!data) {\n      return;\n    }\n    const algoIndexer = indexerForChain(chain);\n    const voteAddressList = (data as unknown as Election[])\n      .map((election) => election.candidates)\n      .flat()\n      .map((candidate) => candidate.address);\n    algoIndexer\n      .lookupAccountTransactions(address)\n      .do()\n      .then(({ transactions }) => {\n        // axfer is asset transfer\n        // Choice coin voting tx is under this type\n        const userSentChoiceTxns = transactions\n          .filter(\n            (txn: any) =>\n              txn[\"tx-type\"] === \"axfer\" &&\n              txn[\"asset-transfer-transaction\"][\"asset-id\"] === ASSET_ID\n          )\n          .map((txn: any) => ({\n            receiver: txn[\"asset-transfer-transaction\"].receiver,\n            amount: txn[\"asset-transfer-transaction\"].amount,\n          }))\n          .filter((userSentChoiceTx: { receiver: string; amount: number }) =>\n            voteAddressList.includes(userSentChoiceTx.receiver)\n          );\n        const _totalCommittedChoice = userSentChoiceTxns\n          .filter((userSentChoiceTx: { receiver: string; amount: number }) =>\n            voteAddressList.includes(userSentChoiceTx.receiver)\n          )\n          .reduce(\n            (\n              previousValue: number,\n              currentTx: { receiver: string; amount: number }\n            ) => previousValue + currentTx.amount,\n            0\n          );\n        setUserTotalCommittedChoiceToVoting(BigInt(_totalCommittedChoice));\n      });\n  }, [chain, data, address]);\n\n  if (!data || isLoading || !address || !choiceCoin) return <></>;\n\n  if (error) {\n    console.error(`An error has occurred: ${(error as ErrorEvent).message}`);\n    return <></>;\n  }\n\n  return (\n    <TotalCommittedChoiceWrapper>\n      <span>\n        Committed:\n        {data &&\n          formatBigNumWithDecimals(\n            userTotalCommittedChoiceToVoting,\n            choiceCoin.decimals\n          )}{\" \"}\n        {choiceCoin.unitName || \"units\"}\n      </span>{\" \"}\n    </TotalCommittedChoiceWrapper>\n  );\n};\n\nexport default TotalCommittedChoice;\n","import styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useWindowSize } from \"@react-hook/window-size\";\nimport Toggle from \"../components/Toggle\";\nimport ConnectWalletButton from \"../components/ConnectWalletButton\";\nimport AccountInfo from \"../components/AccountInfo\";\nimport { selectConnected } from \"../store/walletSlice\";\nimport TotalCommittedChoice from \"../components/TotalCommittedChoice\";\n\nconst RightMenuWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst TopNavigationBar: React.FC<{\n  darkTheme: boolean;\n}> = ({ darkTheme }) => {\n  const connected = useSelector(selectConnected);\n  const dispatch = useDispatch();\n  const [width] = useWindowSize();\n  const announcement =\n    \"///// This site is not responsive yet. Large screen view coming soon.\";\n\n  return (\n    <header className=\"small_header\">\n      <div\n        className=\"notResponsiveWarning\"\n        style={{ display: width > 800 ? \"flex\" : \"none\" }}\n      >\n        <p>{announcement}</p>\n      </div>\n\n      <div className=\"small_header_inn\">\n        <div\n          style={{\n            marginLeft: \"6vw\",\n            // width: \"20px\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            textTransform: \"uppercase\",\n          }}\n        >\n          {/* <img src=\"\" alt=\"\" /> */}\n          Choice Coin\n        </div>\n\n        <RightMenuWrapper>\n          <div\n            className=\"sm_act_menu_butt\"\n            onClick={() => {\n              dispatch({ type: \"modal_menu\" });\n            }}\n          >\n            <p>\n              <i\n                style={{\n                  fontSize: \"20px\",\n                  paddingBottom: \"2px\",\n                  marginRight: \"10px\",\n                }}\n                className=\"uil uil-bars\"\n              />\n            </p>\n            <p style={{ paddingBottom: \"2px\" }}>menu</p>\n          </div>\n          {connected && <TotalCommittedChoice />}\n          {connected ? <AccountInfo /> : <ConnectWalletButton />}\n          <Toggle darkTheme={darkTheme} />\n        </RightMenuWrapper>\n      </div>\n    </header>\n  );\n};\n\nexport default TopNavigationBar;\n","const BottomNavigationBar = ({ NavLink, darkTheme }) => {\n  return (\n    <footer className=\"ft_sm\">\n      <ul className=\"ft_sm_inn\">\n        <li className=\"ft_sm_li\">\n          <NavLink\n            style={({ isActive }) => {\n              return {\n                display: \"flex\",\n                fontSize: isActive ? \"14px\" : \"13px\",\n                fontWeight: isActive && \"600\",\n                opacity: isActive ? \"1\" : \"0.6\",\n                alignItems: \"center\",\n                flexDirection: \"column\",\n              };\n            }}\n            to={`/`}\n            key={\"home\"}\n          >\n            <i className=\"uil uil-estate\"></i>\n            {/* <p> Home</p> */}\n          </NavLink>\n        </li>\n        <li className=\"ft_sm_li\">\n          <NavLink\n            style={({ isActive }) => {\n              return {\n                display: \"flex\",\n                fontSize: isActive ? \"14px\" : \"13px\",\n                fontWeight: isActive && \"600\",\n                opacity: isActive ? \"1\" : \"0.6\",\n                alignItems: \"center\",\n                flexDirection: \"column\",\n              };\n            }}\n            to={`/elections`}\n            key={\"elections\"}\n          >\n            <i className=\"uil uil-plus-square\"></i>\n            {/* <p> Elections</p> */}\n          </NavLink>\n        </li>\n\n        {/* Transfer Section */}\n        <li className=\"ft_sm_li\">\n          <NavLink\n            style={({ isActive }) => {\n              return {\n                width: \"35px\",\n                height: \"35px\",\n                display: \"flex\",\n                borderRadius: \"100%\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                fontWeight: isActive && \"600\",\n                background: \"var(--main-col)\",\n                color: !darkTheme ? \"#fff\" : \"\",\n                border: isActive\n                  ? darkTheme\n                    ? \"1px solid var(--wht)\"\n                    : \"1px solid #666\"\n                  : \"none\",\n                fontSize: isActive ? \"14px\" : \"13px\",\n              };\n            }}\n            to={`/transfer`}\n            key={\"transfer\"}\n          >\n            <i className=\"uil uil-exchange\"></i>\n          </NavLink>\n        </li>\n\n        <li className=\"ft_sm_li\">\n          <NavLink\n            style={({ isActive }) => {\n              return {\n                display: \"flex\",\n                fontSize: isActive ? \"14px\" : \"13px\",\n                fontWeight: isActive && \"600\",\n                opacity: isActive ? \"1\" : \"0.6\",\n                alignItems: \"center\",\n                flexDirection: \"column\",\n              };\n            }}\n            to={`/participate`}\n            key={\"participate\"}\n          >\n            <i className=\"uil uil-check-square\"></i>\n            {/* <p>Participate</p> */}\n          </NavLink>\n        </li>\n        <li className=\"ft_sm_li\">\n          <NavLink\n            style={({ isActive }) => {\n              return {\n                display: \"flex\",\n                fontSize: isActive ? \"14px\" : \"13px\",\n                fontWeight: isActive && \"600\",\n                opacity: isActive ? \"1\" : \"0.6\",\n                alignItems: \"center\",\n                flexDirection: \"column\",\n              };\n            }}\n            to={`/faq`}\n            key={\"faq\"}\n          >\n            <i\n              className=\"uil uil-shield-question\"\n              style={{ fontSize: \"21px\" }}\n            ></i>\n            {/* <p>FAQ</p> */}\n          </NavLink>\n        </li>\n      </ul>\n    </footer>\n  );\n};\n\nexport default BottomNavigationBar;\n","import { NavLink, Route, Routes } from \"react-router-dom\";\nimport WalletConnect from \"@walletconnect/client\";\nimport QRCodeModal from \"algorand-walletconnect-qrcode-modal\";\nimport MyAlgo from \"@randlabs/myalgo-connect\";\n\nimport Faq from \"./faq\";\nimport Home from \"./Home\";\nimport Elections from \"./elections\";\nimport Participate from \"./participate\";\nimport Transfer from \"./transfer\";\nimport CreateElection from \"./elections/create\";\n\nimport TopNavigationBar from \"./statics/TopNavigationBar\";\nimport BottomNavigationBar from \"./statics/BottomNavigationBar\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useWindowSize } from \"@react-hook/window-size\";\nimport { useEffect } from \"react\";\nimport { State } from \"./store/reducers\";\nimport { setConnector, setWalletType } from \"./store/walletSlice\";\n\nconst getWalletConnect = () =>\n  new WalletConnect({\n    bridge: \"https://bridge.walletconnect.org\",\n    qrcodeModal: QRCodeModal,\n  });\n\nconst getMyAlgo = () => new MyAlgo();\n\nconst getAlgoSigner = () => (window as any).AlgoSigner;\n\nconst MainPage = () => {\n  const [width] = useWindowSize();\n  const darkTheme = useSelector((state: State) => state.status.darkTheme);\n  const walletType = useSelector((state: State) => state.wallet.walletType);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // auto-detect is user has connected their wallet to the app\n    if (window.localStorage.getItem(\"walletconnect\") != null) {\n      dispatch(setWalletType(\"walletConnect\"));\n    } else if (typeof (window as any).AlgoSigner !== \"undefined\") {\n      dispatch(setWalletType(\"algoSigner\"));\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (walletType.length > 0) {\n      let connector;\n      switch (walletType) {\n        case \"walletConnect\":\n          connector = getWalletConnect();\n          break;\n        case \"myAlgo\":\n          connector = getMyAlgo();\n          break;\n        case \"algoSigner\":\n          connector = getAlgoSigner();\n          break;\n        default:\n          connector = null;\n      }\n      dispatch(setConnector(connector));\n    }\n  }, [walletType]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <main\n      className={`${\n        darkTheme\n          ? width > 800\n            ? \"dark_theme big_screen\"\n            : \"dark_theme\"\n          : width > 800\n          ? \"light_theme big_screen\"\n          : \"light_theme\"\n      }`}\n      id=\"main_main\"\n    >\n      <TopNavigationBar darkTheme={darkTheme} />\n\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/home\" element={<Home />} />\n        <Route path=\"/elections\" element={<Elections />} />\n        <Route path=\"/transfer\" element={<Transfer />} />\n        <Route path=\"/elections/create\" element={<CreateElection />} />\n        <Route path=\"/participate\" element={<Participate />} />\n        <Route path=\"/faq\" element={<Faq />} />\n      </Routes>\n\n      <BottomNavigationBar NavLink={NavLink} darkTheme={darkTheme} />\n    </main>\n  );\n};\n\nexport default MainPage;\n"],"sourceRoot":""}